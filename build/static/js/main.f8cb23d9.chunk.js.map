{"version":3,"sources":["useFetchJobs.js","Job.js","JobPagination.js","SearchForm.js","App.js","serviceWorker.js","index.js"],"names":["ACTIONS","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","Job","job","React","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","now","toLocaleDateString","Badge","variant","location","style","wordBreak","source","how_to_apply","height","alt","src","company_logo","Text","Button","onClick","prevOpen","Collapse","in","description","JobPagination","page","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","setParams","useReducer","dispach","useEffect","cancelToken1","axios","CancelToken","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","useFetchJobs","Container","param","target","prevParams","map","key","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.f8cb23d9.chunk.js","sourcesContent":["\nimport {useReducer, useEffect} from 'react'\nimport axios from 'axios'\n\nconst ACTIONS = {\n    MAKE_REQUEST: 'make-request', \n    GET_DATA: 'get-data',\n    ERROR:'error',\n    UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\n}\nconst BASE_URL= \"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json\";\n\nfunction reducer(state , action) {\n    switch (action.type) {\n        case ACTIONS.MAKE_REQUEST:\n            return {loading: true, jobs:[]}\n        case ACTIONS.GET_DATA:\n            return {...state,loading:false,jobs:action.payload.jobs}\n        case ACTIONS.ERROR:\n           return {...state,loading:false,error:action.payload.error,jobs:[]}\n        case ACTIONS.UPDATE_HAS_NEXT_PAGE :\n            return {...state, hasNextPage: action.payload.hasNextPage} \n        default:\n            return state;\n    }\n}\nexport default function useFetchJobs(params, page) {\n    const [state, dispach] = useReducer(reducer, {jobs:[],loading:true,})\n\n    useEffect(()=>{\n        const cancelToken1 =axios.CancelToken.source\n            dispach({type:ACTIONS.MAKE_REQUEST})\n            axios.get(BASE_URL,{\n                cancelToken: cancelToken1.token,\n                params: {markdown: true, page:page,...params}\n            }).then(res =>{\n                dispach({type:ACTIONS.GET_DATA, payload:{jobs:res.data}})\n            }).catch (e=>{\n                if(axios.isCancel(e)) return;\n                dispach({type: ACTIONS.ERROR, payload:{error: e}})\n            })\n\n\n            const cancelToken2 =axios.CancelToken.source\n            axios.get(BASE_URL,{\n                cancelToken: cancelToken2.token,\n                params: {markdown: true, page:page +1,...params}\n            }).then(res =>{\n                dispach({type:ACTIONS.UPDATE_HAS_NEXT_PAGE, payload:{hasNextPage:res.data.length !==0}})\n            }).catch (e=>{\n                if(axios.isCancel(e)) return;\n                dispach({type: ACTIONS.ERROR, payload:{error: e}})\n            })\n\n            // don't know why it's not working\n            // return () => {\n            //     cancelToken1.cancel();\n            //    cancelToken2.cancel();\n            // }\n            \n\n\n    },[params,page])\n\n    return state\n\n    \n\n}","import React from 'react'\nimport {Card, Badge, Button, Collapse } from 'react-bootstrap'\nimport ReactMarkdown from 'react-markdown'\nimport './App.css'\n\nexport default function Job({job}) {\n \n    const [open,setOpen] = React.useState(false)\n    return (\n        <Card className=\"mb-3\">\n            <Card.Body>\n                <div >\n                   <div>\n                        <Card.Title>\n                        {job.title} - <span className=\"text-muted\n                        font-weight-light\"> {job.company}</span>\n                        </Card.Title>\n                        <Card.Subtitle>\n                            {new Date(Date.now).toLocaleDateString}\n                        </Card.Subtitle>\n                              <Badge variant=\"secondary\" className=\"mr-2\">{job.type}</Badge>\n                              <Badge variant=\"secondary\">{job.location}</Badge>\n                              <div style={{wordBreak: 'break-all'}}>\n                                     <ReactMarkdown source={job.how_to_apply}/>\n                              </div>\n                    </div>\n                       \n                            <img className=\"d-none d-md-block\" height=\"50\" alt={job.company} src={job.company_logo}/>\n                       \n                </div>\n                    <Card.Text>\n                        <Button onClick={()=>setOpen(prevOpen=> !prevOpen)} \n                                variant=\"primary\">{!open ?'View Details':'Hide Details'}</Button>\n                    </Card.Text>\n                    <Collapse in={open}>\n                    <div className=\"mt-4\">\n                        <ReactMarkdown source={job.description}/>\n\n                    </div>\n                    </Collapse>\n                    \n            </Card.Body>  \n\n        </Card>\n            \n        \n    )\n}\n\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\n\nexport default function JobPagination({page,setPage, hasNextPage}) {\n  function adjustPage(amount){\n    setPage(prevPage => prevPage+ amount)\n  }\n    return (\n       <Pagination>\n           {page !==1 &&<Pagination.Prev onClick={()=>adjustPage(-1)}/>}\n           {page !==1 && <Pagination.Item onClick={()=>adjustPage(1)}>1</Pagination.Item>}\n           {page > 2 && <Pagination.Ellipsis/>}\n           {page > 2 && <Pagination.Item onClick={()=>adjustPage(-1)}>{page -1}</Pagination.Item>}\n             <Pagination.Item active>{page}</Pagination.Item>\n             {hasNextPage && <Pagination.Item onClick={()=>adjustPage(1)}>{page +1 }</Pagination.Item>}\n           {hasNextPage && <Pagination.Next onClick={()=>adjustPage(1)}/>}\n       </Pagination>\n    )\n}\n","import React from 'react'\nimport { Form, Col } from 'react-bootstrap'\n\n\nexport default function SearchForm({params,onParamChange}) {\n    return (\n        <Form className=\"mb-4\">\n            <Form.Row className=\"align-items-end\">\n                <Form.Group as={Col}>\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control onChange={onParamChange} value={params.description} \n                    name=\"description\" type=\"text\"/>\n                </Form.Group>\n                <Form.Group as={Col}>\n                    <Form.Label>Location</Form.Label>\n                    <Form.Control onChange={onParamChange} value={params.location} \n                    name=\"location\" type=\"text\"/>\n                </Form.Group>\n                <Form.Group as = {Col} xs=\"auto\" className=\"ml-2\">\n                  <Form.Check onChange={onParamChange} \n                  value={params.full_time} name=\"full_time\" id=\"full-time\"\n                  label=\"Only Full Time\" type=\"checkbox\" className=\"mb-2\"/>\n                  </Form.Group>\n            </Form.Row>\n        </Form>\n    )\n}\n","import React, {useState} from 'react';\nimport './App.css';\nimport useFetchJobs from './useFetchJobs';\nimport {Container, Spinner} from 'react-bootstrap'\nimport Job from './Job'\nimport JobPagination from './JobPagination'\nimport SearchForm from './SearchForm'\n\nfunction App() {\n  const [params, setParams] = useState({})\n  const[page, setPage] = useState(1)\n  const {jobs,loading, error,hasNextPage} = useFetchJobs(params,page)\n\n  function handelParamChange(e) {\n    const param = e.target.name;\n    const value = e.target.value;\n    setPage(1)\n    setParams(prevParams =>{\n      return {...prevParams,[param]:value}\n    })\n  }\n  return (\n    <Container className=\"my-4\">\n      <h1 className=\"mb-4\">GitHub Jobs Anis </h1>\n      <SearchForm params={params} onParamChange={handelParamChange}/>\n      <JobPagination page={page} setPage={setPage} hasNextPage={hasNextPage}/>\n    \n      {loading && <h1 >Loading...</h1> }\n    \n      {error && <h1>Error .. try refreshing</h1>}\n\n       {jobs.map(job =>{\n        return <Job key={job.id} job = {job}/>\n      })}\n       <JobPagination page={page} setPage={setPage} hasNextPage={hasNextPage}/>\n    </Container>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}