{"ast":null,"code":"import { useReducer, useEffect } from 'react';\nimport axios from 'axios';\nconst ACTIONS = {\n  MAKE_REQUEST: 'make-request',\n  GET_DATA: 'get-data',\n  ERROR: 'error'\n};\nconst BASE_URL = \"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.MAKE_REQUEST:\n      return {\n        loading: true,\n        jobs: []\n      };\n\n    case ACTIONS.GET_DATA:\n      return { ...state,\n        loading: false,\n        jobs: action.payload.jobs\n      };\n\n    case ACTIONS.ERROR:\n      return { ...state,\n        loading: false,\n        error: action.payload.error,\n        jobs: []\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default function useFetchJobs(params, page) {\n  const [state, dispach] = useReducer(reducer, {\n    jobs: [],\n    loading: true\n  });\n  useEffect(() => {\n    const cancelToken = axios.CancelToken.source;\n    dispach({\n      type: ACTIONS.MAKE_REQUEST\n    });\n    axios.get(BASE_URL, {\n      cancelToken: cancelToken.token,\n      params: {\n        markdown: true,\n        page: page,\n        ...params\n      }\n    }).then(res => {\n      dispach({\n        type: ACTIONS.GET_DATA,\n        payload: {\n          jobs: res.data\n        }\n      });\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n      dispach({\n        type: ACTIONS.ERROR,\n        payload: {\n          error: e\n        }\n      });\n    });\n    return () => {\n      cancelToken.cancel();\n    };\n  }, [params, page]);\n  return state;\n}","map":{"version":3,"sources":["/Users/anismedini/Desktop/code-js/github-job/src/useFetchJobs.js"],"names":["useReducer","useEffect","axios","ACTIONS","MAKE_REQUEST","GET_DATA","ERROR","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","useFetchJobs","params","page","dispach","cancelToken","CancelToken","source","get","token","markdown","then","res","data","catch","e","isCancel","cancel"],"mappings":"AACA,SAAQA,UAAR,EAAoBC,SAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,YAAY,EAAE,cADF;AAEZC,EAAAA,QAAQ,EAAE,UAFE;AAGZC,EAAAA,KAAK,EAAC;AAHM,CAAhB;AAKA,MAAMC,QAAQ,GAAE,4EAAhB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAyBC,MAAzB,EAAiC;AAC7B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,OAAO,CAACC,YAAb;AACI,aAAO;AAACQ,QAAAA,OAAO,EAAE,IAAV;AAAgBC,QAAAA,IAAI,EAAC;AAArB,OAAP;;AACJ,SAAKV,OAAO,CAACE,QAAb;AACI,aAAO,EAAC,GAAGI,KAAJ;AAAUG,QAAAA,OAAO,EAAC,KAAlB;AAAwBC,QAAAA,IAAI,EAACH,MAAM,CAACI,OAAP,CAAeD;AAA5C,OAAP;;AACJ,SAAKV,OAAO,CAACG,KAAb;AACI,aAAO,EAAC,GAAGG,KAAJ;AAAUG,QAAAA,OAAO,EAAC,KAAlB;AAAwBG,QAAAA,KAAK,EAACL,MAAM,CAACI,OAAP,CAAeC,KAA7C;AAAmDF,QAAAA,IAAI,EAAC;AAAxD,OAAP;;AACJ;AACI,aAAOJ,KAAP;AARR;AAUH;;AACD,eAAe,SAASO,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoC;AAC/C,QAAM,CAACT,KAAD,EAAQU,OAAR,IAAmBnB,UAAU,CAACQ,OAAD,EAAU;AAACK,IAAAA,IAAI,EAAC,EAAN;AAASD,IAAAA,OAAO,EAAC;AAAjB,GAAV,CAAnC;AAEAX,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMmB,WAAW,GAAElB,KAAK,CAACmB,WAAN,CAAkBC,MAArC;AACIH,IAAAA,OAAO,CAAC;AAACR,MAAAA,IAAI,EAACR,OAAO,CAACC;AAAd,KAAD,CAAP;AACAF,IAAAA,KAAK,CAACqB,GAAN,CAAUhB,QAAV,EAAmB;AACfa,MAAAA,WAAW,EAAEA,WAAW,CAACI,KADV;AAEfP,MAAAA,MAAM,EAAE;AAACQ,QAAAA,QAAQ,EAAE,IAAX;AAAiBP,QAAAA,IAAI,EAACA,IAAtB;AAA2B,WAAGD;AAA9B;AAFO,KAAnB,EAGGS,IAHH,CAGQC,GAAG,IAAG;AACVR,MAAAA,OAAO,CAAC;AAACR,QAAAA,IAAI,EAACR,OAAO,CAACE,QAAd;AAAwBS,QAAAA,OAAO,EAAC;AAACD,UAAAA,IAAI,EAACc,GAAG,CAACC;AAAV;AAAhC,OAAD,CAAP;AACH,KALD,EAKGC,KALH,CAKUC,CAAC,IAAE;AACT,UAAG5B,KAAK,CAAC6B,QAAN,CAAeD,CAAf,CAAH,EAAsB;AACtBX,MAAAA,OAAO,CAAC;AAACR,QAAAA,IAAI,EAAER,OAAO,CAACG,KAAf;AAAsBQ,QAAAA,OAAO,EAAC;AAACC,UAAAA,KAAK,EAAEe;AAAR;AAA9B,OAAD,CAAP;AACH,KARD;AAUA,WAAO,MAAM;AACTV,MAAAA,WAAW,CAACY,MAAZ;AACH,KAFD;AAKP,GAlBQ,EAkBP,CAACf,MAAD,EAAQC,IAAR,CAlBO,CAAT;AAoBA,SAAOT,KAAP;AAIH","sourcesContent":["\nimport {useReducer, useEffect} from 'react'\nimport axios from 'axios'\n\nconst ACTIONS = {\n    MAKE_REQUEST: 'make-request', \n    GET_DATA: 'get-data',\n    ERROR:'error'\n}\nconst BASE_URL= \"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json\";\n\nfunction reducer(state , action) {\n    switch (action.type) {\n        case ACTIONS.MAKE_REQUEST:\n            return {loading: true, jobs:[]}\n        case ACTIONS.GET_DATA:\n            return {...state,loading:false,jobs:action.payload.jobs}\n        case ACTIONS.ERROR:\n            return {...state,loading:false,error:action.payload.error,jobs:[]}\n        default:\n            return state;\n    }\n}\nexport default function useFetchJobs(params, page) {\n    const [state, dispach] = useReducer(reducer, {jobs:[],loading:true,})\n\n    useEffect(()=>{\n        const cancelToken =axios.CancelToken.source\n            dispach({type:ACTIONS.MAKE_REQUEST})\n            axios.get(BASE_URL,{\n                cancelToken: cancelToken.token,\n                params: {markdown: true, page:page,...params}\n            }).then(res =>{\n                dispach({type:ACTIONS.GET_DATA, payload:{jobs:res.data}})\n            }).catch (e=>{\n                if(axios.isCancel(e)) return;\n                dispach({type: ACTIONS.ERROR, payload:{error: e}})\n            })\n\n            return () => {\n                cancelToken.cancel()\n            }\n\n\n    },[params,page])\n\n    return state\n\n    \n\n}"]},"metadata":{},"sourceType":"module"}