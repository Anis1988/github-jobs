{"ast":null,"code":"import _defineProperty from\"/Users/anismedini/Desktop/code-js/github-job/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/anismedini/Desktop/code-js/github-job/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/anismedini/Desktop/code-js/github-job/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./App.css';import useFetchJobs from'./useFetchJobs';import{Container,Spinner}from'react-bootstrap';import Job from'./Job';import JobPagination from'./JobPagination';import SearchForm from'./SearchForm';function App(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),params=_useState2[0],setParams=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),page=_useState4[0],setPage=_useState4[1];var _useFetchJobs=useFetchJobs(params,page),jobs=_useFetchJobs.jobs,loading=_useFetchJobs.loading,error=_useFetchJobs.error,hasNextPage=_useFetchJobs.hasNextPage;function handelParamChange(e){var param=e.target.name;var value=e.target.value;setPage(1);setParams(function(prevParams){return _objectSpread({},prevParams,_defineProperty({},param,value));});}return/*#__PURE__*/React.createElement(Container,{className:\"my-4\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"mb-4\"},\"GitHub Jobs Anis \"),/*#__PURE__*/React.createElement(SearchForm,{params:params,onParamChange:handelParamChange}),/*#__PURE__*/React.createElement(JobPagination,{page:page,setPage:setPage,hasNextPage:hasNextPage}),loading&&/*#__PURE__*/React.createElement(\"h1\",null,\"Loading...\"),error&&/*#__PURE__*/React.createElement(\"h1\",null,\"Error .. try refreshing\"),jobs.map(function(job){return/*#__PURE__*/React.createElement(Job,{key:job.id,job:job});}),/*#__PURE__*/React.createElement(JobPagination,{page:page,setPage:setPage,hasNextPage:hasNextPage}));}export default App;","map":{"version":3,"sources":["/Users/anismedini/Desktop/code-js/github-job/src/App.js"],"names":["React","useState","useFetchJobs","Container","Spinner","Job","JobPagination","SearchForm","App","params","setParams","page","setPage","jobs","loading","error","hasNextPage","handelParamChange","e","param","target","name","value","prevParams","map","job","id"],"mappings":"8XAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,OAAQC,SAAR,CAAmBC,OAAnB,KAAiC,iBAAjC,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CAEA,QAASC,CAAAA,GAAT,EAAe,eACeP,QAAQ,CAAC,EAAD,CADvB,wCACNQ,MADM,eACEC,SADF,8BAEUT,QAAQ,CAAC,CAAD,CAFlB,yCAEPU,IAFO,eAEDC,OAFC,iCAG6BV,YAAY,CAACO,MAAD,CAAQE,IAAR,CAHzC,CAGNE,IAHM,eAGNA,IAHM,CAGDC,OAHC,eAGDA,OAHC,CAGQC,KAHR,eAGQA,KAHR,CAGcC,WAHd,eAGcA,WAHd,CAKb,QAASC,CAAAA,iBAAT,CAA2BC,CAA3B,CAA8B,CAC5B,GAAMC,CAAAA,KAAK,CAAGD,CAAC,CAACE,MAAF,CAASC,IAAvB,CACA,GAAMC,CAAAA,KAAK,CAAGJ,CAAC,CAACE,MAAF,CAASE,KAAvB,CACAV,OAAO,CAAC,CAAD,CAAP,CACAF,SAAS,CAAC,SAAAa,UAAU,CAAG,CACrB,wBAAWA,UAAX,oBAAuBJ,KAAvB,CAA8BG,KAA9B,GACD,CAFQ,CAAT,CAGD,CACD,mBACE,oBAAC,SAAD,EAAW,SAAS,CAAC,MAArB,eACE,0BAAI,SAAS,CAAC,MAAd,sBADF,cAEE,oBAAC,UAAD,EAAY,MAAM,CAAEb,MAApB,CAA4B,aAAa,CAAEQ,iBAA3C,EAFF,cAGE,oBAAC,aAAD,EAAe,IAAI,CAAEN,IAArB,CAA2B,OAAO,CAAEC,OAApC,CAA6C,WAAW,CAAEI,WAA1D,EAHF,CAKGF,OAAO,eAAI,2CALd,CAOGC,KAAK,eAAI,wDAPZ,CASIF,IAAI,CAACW,GAAL,CAAS,SAAAC,GAAG,CAAG,CACf,mBAAO,oBAAC,GAAD,EAAK,GAAG,CAAEA,GAAG,CAACC,EAAd,CAAkB,GAAG,CAAID,GAAzB,EAAP,CACD,CAFC,CATJ,cAYG,oBAAC,aAAD,EAAe,IAAI,CAAEd,IAArB,CAA2B,OAAO,CAAEC,OAApC,CAA6C,WAAW,CAAEI,WAA1D,EAZH,CADF,CAgBD,CAED,cAAeR,CAAAA,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport useFetchJobs from './useFetchJobs';\nimport {Container, Spinner} from 'react-bootstrap'\nimport Job from './Job'\nimport JobPagination from './JobPagination'\nimport SearchForm from './SearchForm'\n\nfunction App() {\n  const [params, setParams] = useState({})\n  const[page, setPage] = useState(1)\n  const {jobs,loading, error,hasNextPage} = useFetchJobs(params,page)\n\n  function handelParamChange(e) {\n    const param = e.target.name;\n    const value = e.target.value;\n    setPage(1)\n    setParams(prevParams =>{\n      return {...prevParams,[param]:value}\n    })\n  }\n  return (\n    <Container className=\"my-4\">\n      <h1 className=\"mb-4\">GitHub Jobs Anis </h1>\n      <SearchForm params={params} onParamChange={handelParamChange}/>\n      <JobPagination page={page} setPage={setPage} hasNextPage={hasNextPage}/>\n    \n      {loading && <h1 >Loading...</h1> }\n    \n      {error && <h1>Error .. try refreshing</h1>}\n\n       {jobs.map(job =>{\n        return <Job key={job.id} job = {job}/>\n      })}\n       <JobPagination page={page} setPage={setPage} hasNextPage={hasNextPage}/>\n    </Container>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}