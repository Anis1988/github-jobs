{"ast":null,"code":"var _jsxFileName = \"/Users/anismedini/Desktop/code-js/github-job/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport useFetchJobs from './useFetchJobs';\nimport { Container } from 'react-bootstrap';\nimport Job from './Job';\n\nfunction App() {\n  const [params, setParams] = useState({});\n  const [page, setPage] = useState(1);\n  const {\n    jobs,\n    loading,\n    error\n  } = useFetchJobs(params, page);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, loading && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 19\n    }\n  }, \"Loading...\"), error && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, \"Error .. try refreshing\"), jobs.map(job => {\n    return /*#__PURE__*/React.createElement(Job, {\n      key: job.id,\n      job: job,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 16\n      }\n    });\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/anismedini/Desktop/code-js/github-job/src/App.js"],"names":["React","useState","useFetchJobs","Container","Job","App","params","setParams","page","setPage","jobs","loading","error","map","job","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAK,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAA/B;AACA,QAAM;AAACS,IAAAA,IAAD;AAAMC,IAAAA,OAAN;AAAeC,IAAAA;AAAf,MAAwBV,YAAY,CAACI,MAAD,EAAQE,IAAR,CAA1C;AACA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADd,EAIGC,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAJZ,EAMIF,IAAI,CAACG,GAAL,CAASC,GAAG,IAAG;AACf,wBAAO,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEA,GAAG,CAACC,EAAd;AAAkB,MAAA,GAAG,EAAID,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFC,CANJ,CADF;AAYD;;AAED,eAAeT,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport useFetchJobs from './useFetchJobs';\nimport {Container} from 'react-bootstrap'\nimport Job from './Job'\n\nfunction App() {\n\n  const [params, setParams] = useState({})\n  const[page, setPage] = useState(1)\n  const {jobs,loading, error} = useFetchJobs(params,page)\n  return (\n    <Container>\n      {loading && <h1>Loading...</h1> }\n\n\n      {error && <h1>Error .. try refreshing</h1>}\n\n       {jobs.map(job =>{\n        return <Job key={job.id} job = {job}/>\n      })}\n    </Container>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}